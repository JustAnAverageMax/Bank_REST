openapi: 3.0.0
info:
  title: Bank card management API
  version: 0.0.1
servers: [ ]
security:
  - bearerAuth: []

paths:
  /cards:
    post:
      operationId: saveCard
      tags:
        - Card
      summary: Save card and link it to provided user id
      requestBody:
        $ref: '#/components/requestBodies/CardCreationRequest'
      responses:
        201:
          $ref: '#/components/responses/CardResponse'
        400:
          $ref: '#/components/responses/ValidationErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
        409:
          $ref: '#/components/responses/ErrorResponse'

    get:
      operationId: findAllCards
      tags:
        - Card
      summary: Return paginated list of all cards
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
      responses:
        200:
          $ref: '#/components/responses/CardsPageResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'

  /cards/{id}:
    get:
      operationId: findCardById
      tags:
        - Card
      summary: Return single card detailed response
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        200:
          $ref: '#/components/responses/CardResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      operationId: deleteCard
      tags:
        - Card
      summary: Delete card based on id
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        204:
          description: Card successfully deleted
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

  /cards/me:
    get:
      security:
        - bearerAuth: [ ]
      operationId: findAllUserCards
      tags:
        - Card
      summary: Return paginated list of user cards
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
      responses:
        200:
          $ref: '#/components/responses/CardsPageResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'

  /users:
    get:
      operationId: findAllUsers
      tags:
        - User
      summary: Return list of users
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
      responses:
        200:
          $ref: '#/components/responses/UsersPageResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'

  /users/{id}:
    get:
      operationId: findUserById
      tags:
        - User
      summary: Return single user details
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        200:
          $ref: '#/components/responses/UserResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

    delete:
      operationId: deleteUser
      tags:
        - User
      summary: Deletes user based on id
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        204:
          description: User successfully deleted
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

  /login:
    post:
      operationId: login
      tags:
        - Authentication
      summary: Authenticate user
      requestBody:
        $ref: '#/components/requestBodies/AuthenticationRequest'
      responses:
        200:
          $ref: '#/components/responses/AuthenticationResponse'
        400:
          $ref: '#/components/responses/ValidationErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'

  /register:
    post:
      operationId: register
      tags:
        - Authentication
      summary: Register user
      requestBody:
        $ref: '#/components/requestBodies/RegistrationRequest'
      responses:
        201:
          $ref: '#/components/responses/AuthenticationResponse'
        400:
          $ref: '#/components/responses/ValidationErrorResponse'
        409:
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Provide this endpoint with jwt token in order to work with it

  parameters:
    Id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64

    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0

    Size:
      name: size
      in: query
      required: false
      schema:
        type: integer
        default: 20

  responses:
    AuthenticationResponse:
      description: Response containing access and refresh tokens
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/AuthenticationRs'
    CardResponse:
      description: Single card detailed response
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/CardRs'

    CardsPageResponse:
      description: List of user cards
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/CardsPageRs'

    UserResponse:
      description: Single user detailed response
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/UserRs'

    UsersPageResponse:
      description: List of users
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/UsersPageRs'

    ErrorResponse:
      description: Generic error response
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/ErrorRs'

    ValidationErrorResponse:
      description: Response containing validation errors
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/ValidationErrorRs'

  requestBodies:
    CardCreationRequest:
      description: Request for card creation
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/CardCreationRq'

    AuthenticationRequest:
      description: Request for user authentication
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/AuthenticationRq'

    RegistrationRequest:
      description: Request for user registration
      content:
        application/json:
          schema:
            $ref: './model.yaml#/components/schemas/RegistrationRq'
